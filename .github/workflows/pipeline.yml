name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
    simple_deployment_pipeline:
        runs-on: ubuntu-20.04
        steps:
          - uses: actions/checkout@v4
          - uses: actions/setup-node@v4
            with:
              node-version: '20'
          - name: Install dependencies
            run: npm install
          - name: Check style
            run: npm run eslint
          - name: build
            run: npm run build
          - name: tests
            run: npm test
          - name: Install Playwright Browsers
            run: npx playwright install --with-deps chromium
          - name: Start server
            run: npm start &
          - name: Run Playwright tests
            run: npx playwright test
          - name: Trigger deployment
            run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
            if: github.event_name == 'push'
           # uses: sws2apps/render-deployment@v1.8.0
           # with:
           #   serviceId: ${{ secrets.RENDER_SERVICE_ID }}
           #   apiKey: ${{ secrets.RENDER_API_KEY }}
           #   multipleDeployment: false #optional, default true
    tag_release:
        needs: [simple_deployment_pipeline]
        runs-on: ubuntu-20.04
        steps:
          - uses: actions/checkout@v4
          - name: Bump version and push tag
            uses: anothrNick/github-tag-action@1.64.0
            if: github.event_name == 'push'
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              DEFAULT_BUMP: patch
    a_test_job:
        runs-on: ubuntu-20.04
        steps:
          - uses: actions/checkout@v4
          - name: github context
            env:
              GITHUB_CONTEXT: ${{ toJson(github) }}
            run: echo "$GITHUB_CONTEXT"
          - name: commits
            env:
              COMMITS: ${{ toJson(github.event.commits) }}
            run: echo "$COMMITS"
          - name: commit messages
            env:
              COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
            run: echo "$COMMIT_MESSAGES"